using sed to find lines beginning with abc in file1 and copy them to file2
sed -ne '/^abc/ p' file1>file2


in our case
sed -ne '/^\([ ]*\)160208165923/ p' results/nr/nrmain_cosmos_4.dat>results/nr/nrmain_mu_a_0.15_E_1.43_K_11.dat


using sed to remove some bogus results with a specific timenumber:
sed -i '/^\([ ]*\)160422115649/d' results/nr/nrmain_cosmos_7.dat
sed -i '/^\([ ]*\)160712001141/d' results/nr/nr3.csv

to convert space or tab separated file to csv


rename is also useful. to rename files ending in .txt and containing abc to the same file with abc replaced by def

with the n it is just a test, it doesn't do anything
rename -vn 's/abc/def/' *.txt
rename -v 's/abc/def/' *.txt

a quick bash script to apply binaryToAscii to a bunch of files:
for f in data/nr/loops/dim_4/K_12/loop_G_1_B_1_M_0.02_a_0.15_mu_0.1*.dat; 
do ./binaryToAscii -b $f -a data/temp/$(basename $f) -loop 1 -K 12; 
done


removing repeated lines using sort:
sort -u results/nr/nrmain_cosmos_7.dat -o results/nr/nrmain_cosmos_7.dat


used grep to count lines in results files which did not have G=1 and B=1
grep -vc '^\([[:space:]]*\)\([0-9\.]\+\)\([[:space:]]\+\)\([0-9\.]\+\)\([[:space:]]\+\)\([0-9\.]\+\)\([[:space:]]\+\)1\([[:space:]]\+\)1\([[:space:]]\+\)' nrmain_cosmos.dat nrmain_cosmos_{2..7}.dat
grep -vc '^\([[:space:]]*\)\([0-9\.]\+\)\([[:space:]]\+\)\([0-9\.]\+\)\([[:space:]]\+\)\([0-9\.]\+\)\([[:space:]]\+\)\([0-9\.]\+\)\([[:space:]]\+\)1\([[:space:]]\+\)1\([[:space:]]\+\)' nrmain_cosmos_8.dat


counting occurances of ',' on first line of file
head -n 1 results/nr/nrmain_cosmos_8.csv | grep -o "," | wc -l

to append contents of db/nr/delta.csv to the end of db/nr/nr.csv, type "cat db/nr/delta.csv >> db/nr/nr.csv"

to change the 0 in "inputs0" to the correct number in each of the files "subs/nrmain1.sub", etc
for i in {1..9}; do sed -i "s/inputs0/inputs$i/g" "subs/nrmain$i.sub"; done;

to send of subs
for i in {0..9}; do msub "subs/nrmain$i.sub"; done;

for getting a specific number from the last line of results
tail -n 1 results/nr/nr4.csv | sed -n 's/^\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),\([0-9.+-]\+\),.*/\10/p'


got the void functions from a file and renamed them with NEW at the beginning
sed -n 's/void \([^(\<]\+\).*/\1/p' old/nrloopOld.cc | sed -n '/template/!p' > temp/voidFns.txt
sort -u temp/voidFns.txt > temp/voidFnsSorted.txt
for fn in $voidFnsSorted; do sed -i "s/\([^a-zA-Z]\)${fn}\([^a-zA-Z]\)/\1NEW${fn}\2/g" temp/nrloop.cc; done
